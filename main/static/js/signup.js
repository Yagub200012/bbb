document.addEventListener('DOMContentLoaded', function() {
    const form = document.querySelector('form');
    const username = document.getElementById('username');
    const email = document.getElementById('email');
    const password1 = document.getElementById('password1');
    const password2 = document.getElementById('password2');
    const toggleButtons = document.querySelectorAll('.toggle-password');

    // –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–∞—Ä–æ–ª–µ–π –∏ –æ—Ç–ø—Ä–∞–≤–∫–∞ —Ñ–æ—Ä–º—ã
    form.addEventListener('submit', function(event) {
        event.preventDefault(); // –û—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω–æ–µ –ø–æ–≤–µ–¥–µ–Ω–∏–µ –æ—Ç–ø—Ä–∞–≤–∫–∏ —Ñ–æ—Ä–º—ã

        if (password1.value !== password2.value) {
            // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –æ–± –æ—à–∏–±–∫–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é
            let errorMessageElement = document.getElementById('error-message');
            errorMessageElement.textContent = '–ü–∞—Ä–æ–ª–∏ –Ω–µ —Å–æ–≤–ø–∞–¥–∞—é—Ç';
            errorMessageElement.style.display = 'block';
            console.log('–≤–∏–¥–∏–º–æ –Ω–µ —Å–æ–≤–ø–∞–ª–∏ –ø–∞—Ä–æ–ª–∏');
        } else {
            // –ï—Å–ª–∏ –ø–∞—Ä–æ–ª–∏ —Å–æ–≤–ø–∞–¥–∞—é—Ç, –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º –¥–∞–Ω–Ω—ã–µ –Ω–∞ —Å–µ—Ä–≤–µ—Ä
            const formData = {
                username: username.value,
                email: email.value,
                password: password1.value,
                confirm_password: password2.value,
            };

            fetch('/auth/api/register/', {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'X-CSRFToken': document.querySelector('[name=csrfmiddlewaretoken]').value
                },
                body: JSON.stringify(formData)
            })
            .then(response => {
                if (!response.ok) {
                    return response.json().then(errorData => {
                        // –ü—Ä–µ–æ–±—Ä–∞–∑—É–µ–º –æ–±—ä–µ–∫—Ç –æ—à–∏–±–æ–∫ –≤ —Å—Ç—Ä–æ–∫—É
                        const errorMessages = Object.entries(errorData)
                            .map(([field, messages]) => `${field}: ${messages.join(', ')}`)
                            .join('\n');
                        throw new Error(errorMessages);
                    });
                }
                return response.json();
            })
            .then(data => {
                window.location.href = '/auth/login/';
            })
            .catch(error => {
                let errorMessageElement = document.getElementById('error-message');
                errorMessageElement.textContent = error.message;
                errorMessageElement.style.display = 'block';
                console.log('–û—à–∏–±–∫–∞:', error.message);
            });
        }
    });

    // –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –≤–∏–¥–∏–º–æ—Å—Ç—å—é –ø–∞—Ä–æ–ª–µ–π
    toggleButtons.forEach(button => {
        button.addEventListener('click', function() {
            const input = this.previousElementSibling;
            if (input.type === 'password') {
                input.type = 'text';
                this.textContent = 'üòê'; // –ú–µ–Ω—è–µ–º –∏–∫–æ–Ω–∫—É
            } else {
                input.type = 'password';
                this.textContent = 'üòë'; // –ú–µ–Ω—è–µ–º –∏–∫–æ–Ω–∫—É –æ–±—Ä–∞—Ç–Ω–æ
            }
        });
    });
});
